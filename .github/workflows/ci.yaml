name: Python Tests

on:
  pull_request:
    branches: [ main, dev ]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install poetry
      run: pipx install poetry

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'poetry'

    - name: Install dependencies
      run: |
        poetry install

    - name: Run unit tests
      run: |
        poetry run pytest -m "not slow" --cov=esce --cov-report=term 

    - name: Run snakemake workflow test
      run: |
        poetry run snakemake -F -c1 --configfile tests/test_config.yaml

  additional_tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout files
      uses: Bhacaz/checkout-files@v2
      with:
        branch: ${{ github.head_ref || github.ref_name }}
        files: tests example config

    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: "3.9"
        channels: conda-forge,nodefaults
        channel-priority: true
        mamba-version: "*"

    - name: Install Snakemake with Mamba
      shell: bash -l {0}
      run: |
        mamba install -c bioconda snakemake

    - name: Run snakemake submodule test (slow)
      shell: bash -l {0}
      run: |
        export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
        snakemake --use-conda -c1 -s tests/snakefile_submodule 

  final:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout files
      uses: Bhacaz/checkout-files@v2
      with:
        branch: ${{ github.head_ref || github.ref_name }}
        files: tests example config

    - name: Testing
      uses: snakemake/snakemake-github-action@v1
      with:
        directory: '.test'
        snakefile: 'tests/snakefile_submodule'
        args: '--cores 1 --use-conda --conda-cleanup-pkgs cache'
        env: |
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
