configfile: "config/config.yaml"


rule test:
    input:
        expand(
            "results/stats/{model}/{dataset}/{features}_{targets}_{matching}_{stratify}_{grid}.csv",
            model=["ridge", "majority-classifier"],
            dataset=["test"],
            features=["x"],
            targets=["y"],
            matching=["none"],
            stratify=["1"],
            grid=["default"],
        ),


rule split:
    input:
        features="resources/{dataset}/features/{features}.csv",
        targets="resources/{dataset}/targets/{targets}.csv",
        matching="resources/{dataset}/matching/{matching}.csv",
    output:
        split="results/splits/{dataset}/{features}_{targets}_{matching}_{stratify}_{samplesize}_{seed}.json",
    script:
        "scripts/generate_splits.py"


rule fit:
    input:
        features="resources/{dataset}/features/{features}.csv",
        targets="resources/{dataset}/targets/{targets}.csv",
        split="results/splits/{dataset}/{features}_{targets}_{matching}_{stratify}_{samplesize}_{seed}.json",
    output:
        scores="results/fits/{model}/{dataset}/{features}_{targets}_{matching}_{stratify}_{samplesize}_{seed}_{grid}.csv",
    params:
        grid="config/grids/{grid}.yaml",
    script:
        "scripts/fit.py"


rule aggregate:
    input:
        scores=expand(
            "results/fits/{{model}}/{{dataset}}/{{features}}_{{targets}}_{{matching}}_{{stratify}}_{samplesize}_{seed}_{{grid}}.csv",
            seed=config["seeds"],
            samplesize=config["sample_sizes"],
        ),
    output:
        scores="results/stats/{model}/{dataset}/{features}_{targets}_{matching}_{stratify}_{grid}.csv",
    params:
        grid="config/grids/{grid}.yaml",
    script:
        "scripts/aggregate.py"


# deconfound inputs + matching
